---
import SectionWrapper from '../shared/SectionWrapper.astro'
import TextLink from '../shared/TextLink.astro'
import Stack from '../shared/Stack.astro'
import Accordion from '../shared/Accordion.astro'
---

<SectionWrapper heading="開発組織のバリュー">
  <Stack>
    <p>
      SmartHRは<TextLink href="https://smarthr.co.jp/about/">
        7つのバリュー
      </TextLink>を掲げています。その中から3つピックアップして、プロダクト開発の文脈でどのように体現しているかをご紹介します。
    </p>
    <Stack>
      <h2>自律駆動</h2>
      <p>
        「100個の問題を社長1人が解くのではなく、100個の問題を100人で1問ずつ解く」というのは創業者の宮田さんの言葉です。SmartHRでは組織がスケールするのに合わせて組織の処理能力もスケールするように、個人やチームに多くの権限が移譲されています。ユーザーに近い現場の目線でプロダクトやプロセスを改善する。それを実現するために自己管理型のチームを作り、チームでプロダクトの投資優先度を判断し、チームで自分たちの開発プロセスの課題に気づき、自ら改善するというサイクルを回しています。すべての根幹には、自ら課題を発見して周囲を巻き込み解決できる自律駆動する個人があり、SmartHRはそんな個人が力を発揮できる環境を全力で作っています。
      </p>
      <Accordion title="良い事例・これはNG">
        <p class="case-title">👍良い事例</p>
        <ul class="case-list">
          <li>
            常にチームやプロダクトの状態に気を配り、指示を待つことなく課題を発見して解決に向けた行動を起こした
          </li>
          <li>
            担当したタスクにオーナーシップを持ち、周囲を巻き込みつつ継続的に取り組み続けて完了までのプロセスを主導した
          </li>
          <li>
            自分だけで判断できる事項に関しては、「許可より謝罪」の精神で無駄な会議などを行わず必要最低限の意思決定コストで結論を出した
          </li>
          <li>
            社内イベントなどのチーム外の取り組みに対しても当事者意識を持ち、主体的に参加して今後の改善案を提示した
          </li>
          <li>
            コミュニケーションフローや資料を整備し、チームメンバーの自主的な課題発見・解決を支援した
          </li>
        </ul>
        <p class="case-title">🙅‍♂️これはNG</p>
        <ul class="case-list">
          <li>
            チームやプロダクトの現状に満足し、課題や改善点を発見しようとしなかった
          </li>
          <li>
            課題に気づいても周囲に対して不満を口にするだけで解決に向けた行動を起こさなかった
          </li>
          <li>
            自分が提起した取り組みの完了に責任を持たず、周囲との合意を取らないまま途中で止めてしまった
          </li>
          <li>
            たたき台となるアイデアを考えずに「どうしましょうか」と周囲に意思決定を委ねたり、必要以上に「これでいいでしょうか」と承認を求めるコミュニケーションを行ったりしてチームの意思決定を遅らせた
          </li>
        </ul>
      </Accordion>
    </Stack>
    <Stack>
      <h2>早いほうがカッコイイ</h2>
      <p>
        Slackでレスをするのも、コードを書くのも、Pull Requestのレビューをするのも、なんだって早いほうがカッコイイものです。中でも特にSmartHRが重視しているのは、フィードバックを受けるまでの早さです。コードも、デザインも、プロダクトも、あらゆるものをなるべく早く軌道修正できるように、小さく作ってフィードバックを受けるようにしています。その小さな早さの違いが、仮説検証サイクルの高速化につながり、本質的な課題解決に至る早さにおいて大きな違いを生むと考えています。
      </p>
      <Accordion title="良い事例・これはNG">
        <p class="case-title">👍良い事例</p>
        <ul class="case-list">
          <li>
            チャットやレビュー依頼に対して、相手に不安を与えたり他メンバーの仕事を止めたりしないよう素早く応答した
          </li>
          <li>
            完璧でなくてもレビュー可能な状態を目指して行動し、早めにFBを受けて軌道修正できるよう工夫した
          </li>
          <li>
            作業中に一人で考えても解決できない問題に直面し、すぐに他メンバーの助けを呼んだ
          </li>
          <li>会議で生まれたToDoを溜め込むことなく、すぐに着手して消化した</li>
        </ul>
        <p class="case-title">🙅‍♂️これはNG</p>
        <ul class="case-list">
          <li>チャットへのレスポンスが遅く、チームの意思決定を遅らせた</li>
          <li>
            特段の理由なく自分の作業進行を優先してレビュー依頼を放置し、チーム全体のタスク遂行を遅らせた
          </li>
          <li>
            成果物が完璧な状態になるまでレビューに出さず、FBを受けるのが遅れた
          </li>
          <li>
            他メンバーを頼ることなく一人で作業を終わらせることに固執し、作業の完了に必要以上の時間をかけた
          </li>
        </ul>
      </Accordion>
    </Stack>
    <Stack>
      <h2>人が欲しいと思うものをつくろう</h2>
      <p>
        人が欲しいと思うものをつくる。ものづくりをする人間であれば誰もが実現したい理想であり、そして実現することが困難な理想でもあります。SmartHRはそんな困難に立ち向かうために、プロダクト開発チームだけで向き合うのではなく、セールス、カスタマーサクセス、カスタマーサポートといった様々な職種の方々と協働しています。あらゆる角度から、顧客が抱いている不満はなにか、どこに満足いただいているのか、ということを知ろうとしています。SmartHRの開発組織では、エンジニアとして技術を使った先に顧客にどんな価値が提供できるのかを常に考えています。
      </p>
      <Accordion title="良い事例・これはNG">
        <p class="case-title">👍良い事例</p>
        <ul class="case-list">
          <li>
            ユーザーの要望を表層的に解釈するのではなく、本質的な課題を捉えて解決策を提案した
          </li>
          <li>
            スプリントレビューやユーザーヒアリングで潜在的な課題を吸い上げた
          </li>
          <li>
            仮説段階で作り込みすぎることなく最小限の単位でのリリースを心がけ、リーンにブラッシュアップを重ねていった
          </li>
          <li>
            要望に対応する改修の工数を捻出するためタスクの優先度や実装方針の調整を行った
          </li>
        </ul>
        <p class="case-title">🙅‍♂️これはNG</p>
        <ul class="case-list">
          <li>
            顧客からの要望やスプリントレビューで受けたFBを鵜呑みにし、その裏に隠れている本質的な課題を見逃した
          </li>
          <li>
            ユーザーの声を聞く機会を持つことなく、仮説だけで機能の企画・開発を進めた
          </li>
          <li>
            工数の調整余地を考慮することなく、手間を理由に要望への対応優先度を下げた
          </li>
          <li>
            特定の技術や開発手法の採用を目的にしてしまい、ビジネス上の目的が達成できなかった
          </li>
        </ul>
      </Accordion>
    </Stack>
  </Stack>
</SectionWrapper>

<style>
  & h2 {
    font-weight: bold;
    font-size: 1.5rem;
    line-height: 134%;
  }

  .case-title {
    font-weight: 800;
    padding-bottom: var(--space-xs);
  }
  .case-list {
    list-style-type: ' ・ ';
    margin-left: var(--space-m);
  }
</style>
